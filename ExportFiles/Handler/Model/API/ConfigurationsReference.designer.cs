//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TFlex.DOCs.References.Configurations
{
	using System;
	using TFlex.DOCs.Model.References;
	using TFlex.DOCs.Model.Structure;
	using TFlex.DOCs.Model.Classes;
	using TFlex.DOCs.Model;
	
	
	/// <summary>
	/// Представляет описание справочника "Конфигурационный справочник"
	/// </summary>
	public partial class ConfigurationsReference
	{
		
		/// <summary>
		/// Представляет уникальный идентификатор (GUID) справочника "Конфигурационный справочник"
		/// </summary>
		public static readonly System.Guid ReferenceId = new Guid("c08ae78c-3a7a-475f-88b8-59ee1bbe715a");
		
		/// <summary>
		/// Инициализирует новый экземпляр ConfigurationsReference для работы с объектами справочника "Конфигурационный справочник"
		/// </summary>
		public ConfigurationsReference(TFlex.DOCs.Model.ServerConnection connection) : 
				base(connection, ConfigurationsReference.ReferenceId)
		{
		}
		
		private ConfigurationsReference(ParameterGroup masterGroup) : 
				base(masterGroup)
		{
		}
		
		/// <summary>
		/// Возвращает типы объектов справочника "Конфигурационный справочник"
		/// </summary>
		public new ConfigurationsTypes Classes
		{
			get
			{
				return ((ConfigurationsTypes)(base.Classes));
			}
		}
		
		protected override ConfigurationsReferenceObject CreateReferenceObjectForClass(ClassObject classObject)
		{
			ConfigurationsType type = classObject as ConfigurationsType;
			if ((type == null))
			{
				return null;
			}
			if (type.IsNumberParameterConfig)
			{
				return new NumberParameterConfigReferenceObject(this);
			}
			if (type.IsStringlParameterConfig)
			{
				return new StringlParameterConfigReferenceObject(this);
			}
			if (type.IsLogicalParameterConfig)
			{
				return new LogicalParameterConfigReferenceObject(this);
			}
			if (type.IsParameterConfig)
			{
				return new ParameterReferenceObject(this);
			}
			if (type.IsArrayConfig)
			{
				return new ArrayReferenceObject(this);
			}
			if (type.IsConfig)
			{
				return new ConfigReferenceObject(this);
			}
			return new ConfigurationsReferenceObject(this);
		}
		
		public partial class Factory : SpecialReferenceFactory<ConfigurationsReference, ConfigurationsTypes>
		{
			
			internal Factory()
			{
			}
			
			public override ConfigurationsReference CreateReference(ParameterGroup masterGroup)
			{
				return new ConfigurationsReference(masterGroup);
			}
			
			public override ConfigurationsTypes CreateClassTree(ParameterGroup masterGroup)
			{
				return new ConfigurationsTypes(masterGroup);
			}
		}
	}
}

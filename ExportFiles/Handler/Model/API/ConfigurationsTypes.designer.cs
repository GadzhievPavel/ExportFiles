//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TFlex.DOCs.References.Configurations
{
	using System;
	using TFlex.DOCs.Model.References;
	using TFlex.DOCs.Model.Structure;
	using TFlex.DOCs.Model.Classes;
	
	
	/// <summary>
	/// Представляет типы объектов справочника "Конфигурационный справочник"
	/// </summary>
	public partial class ConfigurationsTypes
	{
		
		internal ConfigurationsTypes(ParameterGroup group) : 
				base(group)
		{
		}
		
		/// <summary>
		/// Возвращает описание типа объектов "Конфигурация"
		/// </summary>
		public ConfigurationsType Config
		{
			get
			{
				return Find(Keys.Config);
			}
		}
		
		/// <summary>
		/// Возвращает описание типа объектов "Массив"
		/// </summary>
		public ConfigurationsType ArrayConfig
		{
			get
			{
				return Find(Keys.ArrayConfig);
			}
		}
		
		/// <summary>
		/// Возвращает описание типа объектов "Параметр"
		/// </summary>
		public ConfigurationsType ParameterConfig
		{
			get
			{
				return Find(Keys.ParameterConfig);
			}
		}
		
		/// <summary>
		/// Возвращает описание типа объектов "Логический"
		/// </summary>
		public ConfigurationsType LogicalParameterConfig
		{
			get
			{
				return Find(Keys.LogicalParameterConfig);
			}
		}
		
		/// <summary>
		/// Возвращает описание типа объектов "Строковый"
		/// </summary>
		public ConfigurationsType StringlParameterConfig
		{
			get
			{
				return Find(Keys.StringlParameterConfig);
			}
		}
		
		/// <summary>
		/// Возвращает описание типа объектов "Числовой"
		/// </summary>
		public ConfigurationsType NumberParameterConfig
		{
			get
			{
				return Find(Keys.NumberParameterConfig);
			}
		}
		
		protected override ConfigurationsType CreateClassObject(Guid classGuid)
		{
			return new ConfigurationsType(this);
		}
		
		/// <summary>
		/// Уникальные идентификаторы (GUID) типов объектов справочника "Конфигурационный справочник"
		/// </summary>
		public class Keys
		{
			
			/// <summary>
			/// Представляет уникальный идентификатор (GUID) типа "Конфигурация"
			/// </summary>
		   public static readonly Guid Config = new Guid("cb4be044-cd5f-4263-ad00-d7dd4c4121e5");

			/// <summary>
			/// Представляет уникальный идентификатор (GUID) типа "Массив"
			/// </summary>
		   public static readonly Guid ArrayConfig = new Guid("c8f0cc92-59ea-45d1-9bb0-9ba3d9fc68e5");

			/// <summary>
			/// Представляет уникальный идентификатор (GUID) типа "Параметр"
			/// </summary>
		   public static readonly Guid ParameterConfig = new Guid("ec5bcd76-e7ef-4905-a7ef-cdb24954028f");

			/// <summary>
			/// Представляет уникальный идентификатор (GUID) типа "Логический"
			/// </summary>
		   public static readonly Guid LogicalParameterConfig = new Guid("5e58c329-a4f6-4f1a-a6b7-1e4c1f825770");

			/// <summary>
			/// Представляет уникальный идентификатор (GUID) типа "Строковый"
			/// </summary>
		   public static readonly Guid StringlParameterConfig = new Guid("3ef5aa8a-3551-4575-af01-80460dd5a309");

			/// <summary>
			/// Представляет уникальный идентификатор (GUID) типа "Числовой"
			/// </summary>
		   public static readonly Guid NumberParameterConfig = new Guid("61f3d71f-6c90-41d2-b193-dbecca58879f");

		}
	}
}
